/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import Connection.ConnectionQLTV;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.Model_TaiKhoan;
import notification.Notification;
import notification.Notification.Type;
import notification.Notification.Location;
import swing.button;

/**
 *
 * @author Think Pad
 */
public class Form_QLTaiKhoan extends javax.swing.JPanel {

    /**
     * Creates new form From_QLTaiKhoan
     */
    private int x;

    public Form_QLTaiKhoan() throws SQLException {
        initComponents();
        getData(tbTaiKhoan, "1");
        tbTaiKhoan.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int r = tbTaiKhoan.getSelectedRow();
                if (r != -1) {
                    txtTaiKhoan.setText(tbTaiKhoan.getValueAt(r, 0).toString());
                    txtMatKhau.setText(tbTaiKhoan.getValueAt(r, 1).toString());
                    txtMaNhanVien.setText(tbTaiKhoan.getValueAt(r, 2).toString());

                }
            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbTaiKhoan = new swing.Table();
        lbTaiKhoan = new javax.swing.JLabel();
        txtTaiKhoan = new javax.swing.JTextField();
        lbMatKhau = new javax.swing.JLabel();
        txtMatKhau = new javax.swing.JTextField();
        lbMaNhanVien = new javax.swing.JLabel();
        txtMaNhanVien = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        btThemTK = new swing.button();
        btSuaTK = new swing.button();
        btXoa = new swing.button();
        btReload = new swing.button();
        btLuu = new swing.button();

        setBackground(new java.awt.Color(255, 255, 255));

        tbTaiKhoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Tài Khoản", "Mật Khẩu", "Mã Nhận Viên"
            }
        ));
        jScrollPane1.setViewportView(tbTaiKhoan);

        lbTaiKhoan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbTaiKhoan.setText("Tên tài khoản");

        txtTaiKhoan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTaiKhoan.setBorder(null);

        lbMatKhau.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbMatKhau.setText("Mật Khẩu");

        txtMatKhau.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtMatKhau.setBorder(null);

        lbMaNhanVien.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbMaNhanVien.setText("Mã nhân viên");

        txtMaNhanVien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMaNhanVien.setBorder(null);

        btThemTK.setText("Thêm");
        btThemTK.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btThemTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThemTKActionPerformed(evt);
            }
        });

        btSuaTK.setText("Sửa");
        btSuaTK.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btSuaTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSuaTKActionPerformed(evt);
            }
        });

        btXoa.setText("Xóa");
        btXoa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXoaActionPerformed(evt);
            }
        });

        btReload.setBackground(new java.awt.Color(255, 255, 255));
        btReload.setText("Reload");
        btReload.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btReload.setStyle(swing.button.ButtonStyle.DESTRUCTIVE);
        btReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReloadActionPerformed(evt);
            }
        });

        btLuu.setText("Lưu");
        btLuu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLuuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbMatKhau)
                    .addComponent(lbTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTaiKhoan)
                    .addComponent(txtMatKhau)
                    .addComponent(txtMaNhanVien)
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(503, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(btThemTK, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(btSuaTK, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(btXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btReload, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(lbTaiKhoan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbMatKhau)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbMaNhanVien)
                .addGap(18, 18, 18)
                .addComponent(txtMaNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btReload, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSuaTK, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btThemTK, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btThemTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThemTKActionPerformed
        x = 1;
        btSuaTK.setEnabled(false);
        btSuaTK.setStyle(button.ButtonStyle.SECONDARY);
        btXoa.setEnabled(false);
        btXoa.setStyle(button.ButtonStyle.SECONDARY);
    }//GEN-LAST:event_btThemTKActionPerformed

    private void btSuaTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSuaTKActionPerformed
        x = 2;
        txtMaNhanVien.setEditable(false);
        txtMaNhanVien.setForeground(Color.red);
        txtTaiKhoan.setForeground(Color.red);
        txtTaiKhoan.setEditable(false);
        btThemTK.setEnabled(false);
        btThemTK.setStyle(button.ButtonStyle.SECONDARY);
        btXoa.setEnabled(false);
        btXoa.setStyle(button.ButtonStyle.SECONDARY);
    }//GEN-LAST:event_btSuaTKActionPerformed

    private void btXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXoaActionPerformed
        if (txtTaiKhoan.getText().equals("")) {
            Notification panel;
            panel = new Notification((JFrame) SwingUtilities.getWindowAncestor(this), Type.WARNING, Location.BOTTOM_RIGHT, "Chưa chọn sách!");
            return;
        } else {
            try {

                int confirm = JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn xóa?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    Connection conn = ConnectionQLTV.getInstance().getConnection();
                    PreparedStatement stmt = conn.prepareStatement("DELETE FROM taikhoan WHERE taikhoan = '" + txtTaiKhoan.getText() + "'");
                    stmt.executeUpdate();
                    getData(tbTaiKhoan, "1");
                    JOptionPane.showMessageDialog(this, "Xóa thành công");
                    try {
                        txtTaiKhoan.setText("");
                        txtMatKhau.setText("");
                        txtMaNhanVien.setText("");
                        getData(tbTaiKhoan, "1");
                    } catch (SQLException ex) {
                        Logger.getLogger(Form_QLTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(Form_QLTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btXoaActionPerformed

    private void btReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReloadActionPerformed
        try {
            txtTaiKhoan.setText("");
            txtMatKhau.setText("");
            txtMaNhanVien.setText("");

            // TODO add your handling code here:
            getData(tbTaiKhoan, "1");
        } catch (SQLException ex) {
            Logger.getLogger(Form_QLTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btReloadActionPerformed

    private void btLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLuuActionPerformed
        if (x == 1) {
            if (txtTaiKhoan.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập tên tài khoản");
            } else if (txtMatKhau.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập mật khẩu");
            } else if (txtMaNhanVien.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập mã nhân viên");
            } else {

                try {
                    Connection conn = ConnectionQLTV.getInstance().getConnection();
                    PreparedStatement stmt = conn.prepareStatement("select * from taikhoan where TaiKhoan = '" + txtTaiKhoan.getText() + "'");
                    ResultSet rs = stmt.executeQuery();
                    stmt = conn.prepareStatement("select * from taikhoan where MaNV = '" + txtMaNhanVien.getText() + "'");
                    ResultSet rs1 = stmt.executeQuery();
                    if (rs.next()) {
                        Notification panel;
                        panel = new Notification((JFrame) SwingUtilities.getWindowAncestor(this), Type.WARNING, Location.BOTTOM_RIGHT, "Nhập trùng tên tài khoản");
                        panel.showNotification();
                    } else if (rs1.next()) {
                        Notification panel;
                        panel = new Notification((JFrame) SwingUtilities.getWindowAncestor(this), Type.WARNING, Location.BOTTOM_RIGHT, "Nhập trùng mã nhân viên");
                        panel.showNotification();

                    } else {

                        stmt = conn.prepareStatement("INSERT INTO taikhoan VALUES (?, ?, ?)");
                        stmt.setString(1, txtTaiKhoan.getText());
                        stmt.setString(2, txtMatKhau.getText());
                        stmt.setString(3, txtMaNhanVien.getText());
                        stmt.executeUpdate();
                        getData(tbTaiKhoan, "1");
                        Notification panel = new Notification((JFrame) SwingUtilities.getWindowAncestor(this), Notification.Type.SUCCESS, Notification.Location.BOTTOM_RIGHT, "Thêm tài khoản thành công");
                        panel.showNotification();
                        btSuaTK.setEnabled(true);
                        btSuaTK.setStyle(button.ButtonStyle.PRIMARY);
                        btXoa.setEnabled(true);
                        btXoa.setStyle(button.ButtonStyle.PRIMARY);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Form_QLTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("eror1");
                }
            }
        }
        if (x == 2) {
            if (txtTaiKhoan.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập tên tài khoản");
            } else if (txtMatKhau.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập mật khẩu");
            } else if (txtMaNhanVien.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập mã nhân viên");
            } else {
                // Thực hiện quá trình sửa dữ liệu
                try {
                    Connection conn = ConnectionQLTV.getInstance().getConnection();
                    PreparedStatement stmt = conn.prepareStatement("select * from taikhoan where MaNV = '" + txtMaNhanVien.getText() + "'");
                    ResultSet rs = stmt.executeQuery();
                    if (rs.next()) {
                        stmt = conn.prepareStatement("UPDATE taikhoan SET  MatKhau=?,MaNV=? where TaiKhoan=?");
                        stmt.setString(1, txtMatKhau.getText());
                        stmt.setString(2, txtMaNhanVien.getText());
                        stmt.setString(3, txtTaiKhoan.getText());
                        stmt.executeUpdate();
                        getData(tbTaiKhoan, "1");

                        // Hiển thị thông báo sửa thành công
                        Notification panel = new Notification((JFrame) SwingUtilities.getWindowAncestor(this), Notification.Type.SUCCESS, Notification.Location.TOP_CENTER, "Sửa thành công");
                        panel.showNotification();
                        txtMaNhanVien.setEditable(true);
                        txtMaNhanVien.setForeground(Color.black);
                        txtTaiKhoan.setForeground(Color.black);
                        txtTaiKhoan.setEditable(true);
                        btThemTK.setEnabled(true);
                        btThemTK.setStyle(button.ButtonStyle.PRIMARY);
                        btXoa.setEnabled(true);
                        btXoa.setStyle(button.ButtonStyle.PRIMARY);
                    } else {
                        Notification panel = new Notification((JFrame) SwingUtilities.getWindowAncestor(this), Notification.Type.INFO, Notification.Location.TOP_CENTER, "Không tồn tại trong sql");
                        panel.showNotification();
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Form_QLTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
                    System.out.println("eror2");

                }
            }

        }
    }//GEN-LAST:event_btLuuActionPerformed
    public static void getData(JTable tb, String a) throws SQLException {
        String sql = "select * from taikhoan where " + a;
        Connection conn = ConnectionQLTV.getInstance().getConnection();
        PreparedStatement stmt = conn.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();
        List<Model_TaiKhoan> listTK = new ArrayList<>();
        while (rs.next()) {
            Model_TaiKhoan tk = new Model_TaiKhoan(rs.getString(1), rs.getString(2), rs.getString(3));

            listTK.add(tk);
        }
        String[] columnNames = {"Tên Tài Khoản", "Mật Khẩu", "Mã Nhân Vien"};
        DefaultTableModel defaultTableModel = new DefaultTableModel(columnNames, 0);

        for (Model_TaiKhoan tk : listTK) {
            Object[] rowData = {tk.getTaiKhoan(), tk.getMatKhau(), tk.getMaNV()};
            defaultTableModel.addRow(rowData);
        }
        tb.setModel(defaultTableModel);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private swing.button btLuu;
    private swing.button btReload;
    private swing.button btSuaTK;
    private swing.button btThemTK;
    private swing.button btXoa;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lbMaNhanVien;
    private javax.swing.JLabel lbMatKhau;
    private javax.swing.JLabel lbTaiKhoan;
    private swing.Table tbTaiKhoan;
    private javax.swing.JTextField txtMaNhanVien;
    private javax.swing.JTextField txtMatKhau;
    private javax.swing.JTextField txtTaiKhoan;
    // End of variables declaration//GEN-END:variables
}
